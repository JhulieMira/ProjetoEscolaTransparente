// <auto-generated />
using System;
using EscolaTransparente.Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscolaTransparente.Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250417212732_CriacaoBanco")]
    partial class CriacaoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.AvaliacaoModel", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaracteristicaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Nota")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AvaliacaoId");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("EscolaId");

                    b.ToTable("Avaliacao", (string)null);
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.CaracteristicaModel", b =>
                {
                    b.Property<int>("CaracteristicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CaracteristicaId");

                    b.ToTable("Caracteristica", (string)null);
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.CaracteristicasEscolaModel", b =>
                {
                    b.Property<int>("CaracteristicasEscolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaracteristicaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("NotaMedia")
                        .HasColumnType("INTEGER");

                    b.HasKey("CaracteristicasEscolaId");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("EscolaId");

                    b.ToTable("CaracteristicasEscola", (string)null);
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.ContatoModel", b =>
                {
                    b.Property<int>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroCelular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroFixo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlSite")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("ContatoId");

                    b.HasIndex("EscolaId")
                        .IsUnique();

                    b.ToTable("Contato", (string)null);
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.EnderecoModel", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("EnderecoId");

                    b.HasIndex("EscolaId")
                        .IsUnique();

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.EscolaModel", b =>
                {
                    b.Property<int>("EscolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadaEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NivelEnsino")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<short>("NotaMedia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoInstituicao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Verificada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.HasKey("EscolaId");

                    b.ToTable("Escola", (string)null);
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.RespostaAvaliacaoModel", b =>
                {
                    b.Property<int>("RespostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("TEXT");

                    b.HasKey("RespostaId");

                    b.HasIndex("AvaliacaoId")
                        .IsUnique();

                    b.ToTable("RespostaAvaliacao", (string)null);
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.AvaliacaoModel", b =>
                {
                    b.HasOne("EscolaTransparente.Infraestructure.Data.DataModel.CaracteristicaModel", "Caracteristica")
                        .WithMany()
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EscolaTransparente.Infraestructure.Data.DataModel.EscolaModel", "Escola")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caracteristica");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.CaracteristicasEscolaModel", b =>
                {
                    b.HasOne("EscolaTransparente.Infraestructure.Data.DataModel.CaracteristicaModel", "Caracteristica")
                        .WithMany()
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaTransparente.Infraestructure.Data.DataModel.EscolaModel", "Escola")
                        .WithMany("CaracteristicasEscola")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caracteristica");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.ContatoModel", b =>
                {
                    b.HasOne("EscolaTransparente.Infraestructure.Data.DataModel.EscolaModel", "Escola")
                        .WithOne("Contato")
                        .HasForeignKey("EscolaTransparente.Infraestructure.Data.DataModel.ContatoModel", "EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.EnderecoModel", b =>
                {
                    b.HasOne("EscolaTransparente.Infraestructure.Data.DataModel.EscolaModel", "Escola")
                        .WithOne("Endereco")
                        .HasForeignKey("EscolaTransparente.Infraestructure.Data.DataModel.EnderecoModel", "EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.RespostaAvaliacaoModel", b =>
                {
                    b.HasOne("EscolaTransparente.Infraestructure.Data.DataModel.AvaliacaoModel", "Avaliacao")
                        .WithOne("RespostaAvaliacao")
                        .HasForeignKey("EscolaTransparente.Infraestructure.Data.DataModel.RespostaAvaliacaoModel", "AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.AvaliacaoModel", b =>
                {
                    b.Navigation("RespostaAvaliacao")
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaTransparente.Infraestructure.Data.DataModel.EscolaModel", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("CaracteristicasEscola");

                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
